diff -aur ruby-taglib-1.1/.config ruby-taglib-1.1+patch2_ruby1.9//.config
--- ruby-taglib-1.1/lib/taglib.rb	2006-05-09 16:39:37.000000000 +0200
+++ ruby-taglib-1.1+patch2_ruby1.9//lib/taglib.rb	2010-07-26 18:03:14.000000000 +0200
@@ -1,4 +1,5 @@
 # Copyright (C) 2004 Neil Stevens <neil@hakubi.us>
+# Copyright (C) 2010 Vincent Carmona <vinc4mai@gmail.com>
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
@@ -37,10 +38,15 @@
 
 module TagLib
 
-extend DL::Importable
+begin
+	extend DL::Importer#Since ruby 1.9
+rescue NameError
+	extend DL::Importable#Old ruby versions
+end
 
 begin
 	dlload 'libtag_c.so'
+	#dlload 'libtag_c.so.0'# for debian-like or use a link.
 rescue
 	begin
 		dlload 'libtag_c.dylib'
@@ -69,15 +75,15 @@
 extern 'char* taglib_tag_album(void*)'
 extern 'char* taglib_tag_comment(void*)'
 extern 'char* taglib_tag_genre(void*)'
-extern 'uint taglib_tag_year(void*)'
-extern 'uint taglib_tag_track(void*)'
+extern 'unsigned int taglib_tag_year(void*)'
+extern 'unsigned int taglib_tag_track(void*)'
 extern 'void taglib_tag_set_title(void*, char*)'
 extern 'void taglib_tag_set_artist(void*, char*)'
 extern 'void taglib_tag_set_album(void*, char*)'
 extern 'void taglib_tag_set_comment(void*, char*)'
 extern 'void taglib_tag_set_genre(void*, char*)'
-extern 'void taglib_tag_set_year(void*, uint)'
-extern 'void taglib_tag_set_track(void*, uint)'
+extern 'void taglib_tag_set_year(void*, unsigned int)'
+extern 'void taglib_tag_set_track(void*, unsigned int)'
 
 extern 'int taglib_audioproperties_length(void*)'
 extern 'int taglib_audioproperties_bitrate(void*)'
@@ -100,9 +106,7 @@
 
 	def initialize(p)
 		@path = p
-		if not @path
-			raise BadPath.new
-		end
+		raise BadPath.new unless @path
 
 		if MAHORO_PRESENT
 			mahoro = Mahoro.new
@@ -119,7 +123,7 @@
 			@file = TagLib.taglib_file_new(@path)
 		end
 
-		if not @file
+		unless @file
 			@path = nil
 			raise BadFile.new
 		end
@@ -139,8 +143,13 @@
 		@audio = nil
 	end
 
+#I have had to_s method to be sure that methods return a string and not a char*.
+#The behaviour is inconsistent depending on ruby version.
+#I hope that is not too ugly.
+#Vincent
+
 	def title
-		return TagLib.taglib_tag_title(tag)
+		TagLib.taglib_tag_title(tag).to_s
 	end
 
 	def title=(string)
@@ -148,7 +157,7 @@
 	end
 
 	def artist
-		return TagLib.taglib_tag_artist(tag)
+		TagLib.taglib_tag_artist(tag).to_s
 	end
 
 	def artist=(string)
@@ -156,7 +165,7 @@
 	end
 
 	def album
-		return TagLib.taglib_tag_album(tag)
+		TagLib.taglib_tag_album(tag).to_s
 	end
 
 	def album=(string)
@@ -164,7 +173,7 @@
 	end
 
 	def comment
-		return TagLib.taglib_tag_comment(tag)
+		TagLib.taglib_tag_comment(tag).to_s
 	end
 
 	def comment=(string)
@@ -172,7 +181,7 @@
 	end
 
 	def genre
-		return TagLib.taglib_tag_genre(tag)
+		TagLib.taglib_tag_genre(tag).to_s
 	end
 
 	def genre=(string)
@@ -180,7 +189,7 @@
 	end
 
 	def year
-		return TagLib.taglib_tag_year(tag)
+		TagLib.taglib_tag_year(tag)
 	end
 
 	def year=(uint)
@@ -188,7 +197,7 @@
 	end
 
 	def track
-		return TagLib.taglib_tag_track(tag)
+		TagLib.taglib_tag_track(tag)
 	end
 
 	def track=(uint)
@@ -196,46 +205,36 @@
 	end
 
 	def length
-		return TagLib.taglib_audioproperties_length(audio)
+		TagLib.taglib_audioproperties_length(audio)
 	end
 
 	def bitrate
-		return TagLib.taglib_audioproperties_bitrate(audio)
+		TagLib.taglib_audioproperties_bitrate(audio)
 	end
 
 	def samplerate
-		return TagLib.taglib_audioproperties_samplerate(audio)
+		TagLib.taglib_audioproperties_samplerate(audio)
 	end
 
 	def channels
-		return TagLib.taglib_audioproperties_channels(audio)
+		TagLib.taglib_audioproperties_channels(audio)
 	end
 
 private
 	def tag
-		if not @tag
-			@tag = TagLib.taglib_file_tag(@file)
-			if not @tag
-				raise BadTag.new
-			end
-		end
-		return @tag
+		@tag ||= TagLib.taglib_file_tag(@file)
+		raise BadTag.new unless @tag
+		@tag
 	end
 
 	def audio
-		if not @audio
-			@audio = TagLib.taglib_file_audioproperties(@file)
-			if not @audio
-				raise BadAudioProperties.new
-			end
-		end
-		return @audio
+		@audio ||= TagLib.taglib_file_audioproperties(@file)
+		raise BadAudioProperties.new unless @audio
+		@audio
 	end
 
 	def taglibForMime(mime)
-		if mime.include?('MP3')
-			return TagLib::MPEG
-		end
+		return TagLib::MPEG if mime.include?('MP3')
 
 		if mime.include?('Ogg') or mime.include?('ogg')
 			if mime.include?('Vorbis') or mime.include?('vorbis')
